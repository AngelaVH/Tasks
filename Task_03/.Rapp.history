sum(toMomMom, ToMomDad)
sum?
sum()
sum(toMomMom, ToMomDad)
sum(toMom, ToMomDad)
sum(toMomMom, ToMomDad)
sum('toMomMom', ToMomDad)
sum('toMomMom','ToMomDad')
sum(toMomMom,  ToMomDad)
sum('toMomMom', 'ToMomDad')
sum("toMomMom", "ToMomDad")
sum(ToMomMom, ToMomDad)
sum(toMomMom, toMomDad)
sum(ToMomMom, ToMomDad)
sum?
sum(ToMomMom, ToMomDad)
sum?#
sum()#
sum(ToMomMom, ToMomDad)
sum?#
sum(ToMomMom, ToMomDad)
(sum, sum(ToMomMom, ToMomDad))
(sum sum(ToMomMom, ToMomDad))
(sum(ToMomMom, ToMomDad))
(sum('ToMomMom', 'ToMomDad'))
(sum('ToMomMom, ToMomDad'))
sum('ToMomMom, ToMomDad')
sum("ToMomMom, ToMomDad")
sum(ToMomMom, ToMomDad)
5#
A <- 5#
A * 2 #
B <- c(A, 5, 5)#
B#
B * 2#
B <- c(A, 5, 5)#
B * 2#
C <- c(B, 6, 10)#
C * 6#
D <- c(1, 5, 10, 15, 20)#
sum(D)#
mean(D)#
min(D)#
E <- c(6, 7, 8, 9, 10)#
which (E == 8)#
which (E > 8)#
E[which (E > 8)]
trueMean1 <- 5#
trueSD1 <- 5#
population1 <- rnorm(1e6 , trueMean1 , trueSD1)
trueMean2 <- 4#
trueSD2 <- 5 #
population2 <- rnorm(1e6, trueMean2 , trueSD2)
Size <- 50 #
Sample1 <- sample(population1, Size)#
Sample2 <- sample(population2, Size)#
boxplot(Sample1, Sample2)#
individual2 <- c("A","A")#
Gam1 <- sample(individual1 , 1)#
Gam2 <- sample(individual2, 1)#
newBaby <- c(Gam1, Gam2)#
isHet <- c()
for (i in 1:100) {#
		Gam1 <- sample(individual1, 1)#
		Gam2 <- sample(individual2, 1)#
		newBaby <- c(Gam1, Gam2)#
		isHet[i] <- Gam1 == Gam2#
}
Gam1 <- sample(individual1 , 1)#
Gam2 <- sample(individual2, 1)#
newBaby <- c(Gam1, Gam2)#
isHet <- c()
ize <- 50 #
Sample1 <- sample(population1, Size)#
Sample2 <- sample(population2, Size)#
boxplot(Sample1, Sample2)#
individual1 <- c("B","A")#
individual2 <- c("A","A")#
Gam1 <- sample(individual1 , 1)#
Gam2 <- sample(individual2, 1)#
newBaby <- c(Gam1, Gam2)#
isHet <- c()
for (i in 1:100) {#
		Gam1 <- sample(individual1, 1)#
		Gam2 <- sample(individual2, 1)#
		newBaby <- c(Gam1, Gam2)#
		isHet[i] <- Gam1 == Gam2#
}
sum(isHet) / length(isHet)#
source("http://jonsmitchell.com/code/simFxn04.R")#
MatGrandma <- makeFounder("grandma_mom")#
MatGrandpa <- makeFounder("grandpa_mom")#
PatGrandma <- makeFounder("grandma_da")#
PatGrandpa <- makeFounder("grandpa_da")#
Alan <- makeBaby(PatGrandma, PatGrandpa)#
Brenda <- makeBaby(PatGrandma, PatGrandpa)#
Focus <- makeBaby(Brenda, Alan)#
ToMom <-length( grep("mom", Focus))/length(Focus)#
ToMomMom <- length( grep("grandma_mom", Focus))/length(Focus)#
ToMomDad <- length( grep("grandpa_mom", Focus))/length(Focus)#
Sibling_01 <- makeBaby(Brenda, Alan)#
ToSib <-length(intersect(Focus, Sibling_01))/length(Focus)#
ManySiblings <- replicate( 1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))/length(Focus))
quantile(ManySiblings)#
mean(ManySiblings)#
plot(density(ManySiblings), main="", xlab="proportion shared genes")
sum(ToMomMom, ToMomDad)
pdf("003_relatePlot.pdf", height = 4, width = 4)
dev.off()
5#
A <- 5#
A * 2 #
B <- c(A, 5, 5)#
B#
B * 2#
B <- c(A, 5, 5)#
B * 2#
C <- c(B, 6, 10)#
C * 6#
D <- c(1, 5, 10, 15, 20)#
sum(D)#
mean(D)#
min(D)#
E <- c(6, 7, 8, 9, 10)#
which (E == 8)#
which (E > 8)#
E[which (E > 8)]
trueMean1 <- 5#
trueSD1 <- 5#
population1 <- rnorm(1e6 , trueMean1 , trueSD1)
trueMean2 <- 4#
trueSD2 <- 5 #
population2 <- rnorm(1e6, trueMean2 , trueSD2)
Size <- 50 #
Sample1 <- sample(population1, Size)#
Sample2 <- sample(population2, Size)#
boxplot(Sample1, Sample2)#
individual1 <- c("B","A")#
individual2 <- c("A","A")#
Gam1 <- sample(individual1 , 1)#
Gam2 <- sample(individual2, 1)#
newBaby <- c(Gam1, Gam2)#
isHet <- c()
for (i in 1:100) {#
		Gam1 <- sample(individual1, 1)#
		Gam2 <- sample(individual2, 1)#
		newBaby <- c(Gam1, Gam2)#
		isHet[i] <- Gam1 == Gam2#
}
sum(isHet) / length(isHet)#
source("http://jonsmitchell.com/code/simFxn04.R")#
MatGrandma <- makeFounder("grandma_mom")#
MatGrandpa <- makeFounder("grandpa_mom")#
PatGrandma <- makeFounder("grandma_da")#
PatGrandpa <- makeFounder("grandpa_da")#
Alan <- makeBaby(PatGrandma, PatGrandpa)#
Brenda <- makeBaby(PatGrandma, PatGrandpa)
Focus <- makeBaby(Brenda, Alan)#
ToMom <-length( grep("mom", Focus))/length(Focus)#
ToMomMom <- length( grep("grandma_mom", Focus))/length(Focus)#
ToMomDad <- length( grep("grandpa_mom", Focus))/length(Focus)#
Sibling_01 <- makeBaby(Brenda, Alan)#
ToSib <-length(intersect(Focus, Sibling_01))/length(Focus)#
ManySiblings <- replicate( 1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))/length(Focus))
quantile(ManySiblings)#
mean(ManySiblings)#
plot(density(ManySiblings), main="", xlab="proportion shared genes")#
sum?#
sum(ToMomMom, ToMomDad)#
sum("ToMomMom, ToMomDad")
sum(ToMomMom, ToMomDad)
pdf("003_relatePlot.pdf", height = 4, width = 4)#
dev.off()
pdf(file="003_relatePlot.pdf", height = 4, width = 4)
dev.off()
5#
A <- 5#
A * 2 #
B <- c(A, 5, 5)#
B#
B * 2#
B <- c(A, 5, 5)#
B * 2#
C <- c(B, 6, 10)#
C * 6#
D <- c(1, 5, 10, 15, 20)#
sum(D)#
mean(D)#
min(D)#
E <- c(6, 7, 8, 9, 10)#
which (E == 8)#
which (E > 8)#
E[which (E > 8)]
trueMean1 <- 5#
trueSD1 <- 5#
population1 <- rnorm(1e6 , trueMean1 , trueSD1)
trueMean2 <- 4#
trueSD2 <- 5 #
population2 <- rnorm(1e6, trueMean2 , trueSD2)
Size <- 50 #
Sample1 <- sample(population1, Size)#
Sample2 <- sample(population2, Size)#
boxplot(Sample1, Sample2)#
individual1 <- c("B","A")#
individual2 <- c("A","A")#
Gam1 <- sample(individual1 , 1)#
Gam2 <- sample(individual2, 1)#
newBaby <- c(Gam1, Gam2)#
isHet <- c()
for (i in 1:100) {#
		Gam1 <- sample(individual1, 1)#
		Gam2 <- sample(individual2, 1)#
		newBaby <- c(Gam1, Gam2)#
		isHet[i] <- Gam1 == Gam2
for (i in 1:100) {#
		Gam1 <- sample(individual1, 1)#
		Gam2 <- sample(individual2, 1)#
		newBaby <- c(Gam1, Gam2)#
		isHet[i] <- Gam1 == Gam2#
}
sum(isHet) / length(isHet)#
source("http://jonsmitchell.com/code/simFxn04.R")#
MatGrandma <- makeFounder("grandma_mom")#
MatGrandpa <- makeFounder("grandpa_mom")#
PatGrandma <- makeFounder("grandma_da")#
PatGrandpa <- makeFounder("grandpa_da")#
Alan <- makeBaby(PatGrandma, PatGrandpa)#
Brenda <- makeBaby(PatGrandma, PatGrandpa)#
Focus <- makeBaby(Brenda, Alan)#
ToMom <-length( grep("mom", Focus))/length(Focus)#
ToMomMom <- length( grep("grandma_mom", Focus))/length(Focus)#
ToMomDad <- length( grep("grandpa_mom", Focus))/length(Focus)#
Sibling_01 <- makeBaby(Brenda, Alan)
ToSib <-length(intersect(Focus, Sibling_01))/length(Focus)#
ManySiblings <- replicate( 1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))/length(Focus))#
quantile(ManySiblings)#
mean(ManySiblings)#
plot(density(ManySiblings), main="", xlab="proportion shared genes")#
sum(ToMomMom, ToMomDad)
pdf(file="003_relatePlot.pdf", height = 4, width = 4)
dev.off()
5#
A <- 5#
A * 2 #
B <- c(A, 5, 5)#
B#
B * 2#
B <- c(A, 5, 5)#
B * 2#
C <- c(B, 6, 10)#
C * 6#
D <- c(1, 5, 10, 15, 20)#
sum(D)#
mean(D)#
min(D)#
E <- c(6, 7, 8, 9, 10)#
which (E == 8)#
which (E > 8)#
E[which (E > 8)]
trueMean1 <- 5#
trueSD1 <- 5#
population1 <- rnorm(1e6 , trueMean1 , trueSD1)
trueMean2 <- 4#
trueSD2 <- 5 #
population2 <- rnorm(1e6, trueMean2 , trueSD2)
Size <- 50 #
Sample1 <- sample(population1, Size)#
Sample2 <- sample(population2, Size)#
boxplot(Sample1, Sample2)#
individual1 <- c("B","A")#
individual2 <- c("A","A")#
Gam1 <- sample(individual1 , 1)#
Gam2 <- sample(individual2, 1)#
newBaby <- c(Gam1, Gam2)
isHet <- c()
for (i in 1:100) {#
		Gam1 <- sample(individual1, 1)#
		Gam2 <- sample(individual2, 1)#
		newBaby <- c(Gam1, Gam2)#
		isHet[i] <- Gam1 == Gam2#
}
sum(isHet) / length(isHet)#
source("http://jonsmitchell.com/code/simFxn04.R")#
MatGrandma <- makeFounder("grandma_mom")#
MatGrandpa <- makeFounder("grandpa_mom")#
PatGrandma <- makeFounder("grandma_da")#
PatGrandpa <- makeFounder("grandpa_da")#
Alan <- makeBaby(PatGrandma, PatGrandpa)#
Brenda <- makeBaby(PatGrandma, PatGrandpa)#
Focus <- makeBaby(Brenda, Alan)#
ToMom <-length( grep("mom", Focus))/length(Focus)#
ToMomMom <- length( grep("grandma_mom", Focus))/length(Focus)
5#
A <- 5#
A * 2 #
B <- c(A, 5, 5)#
B#
B * 2#
B <- c(A, 5, 5)#
B * 2#
C <- c(B, 6, 10)#
C * 6#
D <- c(1, 5, 10, 15, 20)
sum(D)#
mean(D)#
min(D)#
E <- c(6, 7, 8, 9, 10)
which (E == 8)#
which (E > 8)#
E[which (E > 8)]
trueMean1 <- 5#
trueSD1 <- 5#
population1 <- rnorm(1e6 , trueMean1 , trueSD1)
trueMean2 <- 4#
trueSD2 <- 5 #
population2 <- rnorm(1e6, trueMean2 , trueSD2)
Size <- 50 #
Sample1 <- sample(population1, Size)#
Sample2 <- sample(population2, Size)#
boxplot(Sample1, Sample2)#
individual1 <- c("B","A")#
individual2 <- c("A","A")#
Gam1 <- sample(individual1 , 1)#
Gam2 <- sample(individual2, 1)#
newBaby <- c(Gam1, Gam2)#
isHet <- c()
for (i in 1:100) {#
		Gam1 <- sample(individual1, 1)#
		Gam2 <- sample(individual2, 1)#
		newBaby <- c(Gam1, Gam2)#
		isHet[i] <- Gam1 == Gam2#
}
sum(isHet) / length(isHet)#
source("http://jonsmitchell.com/code/simFxn04.R")#
MatGrandma <- makeFounder("grandma_mom")#
MatGrandpa <- makeFounder("grandpa_mom")#
PatGrandma <- makeFounder("grandma_da")#
PatGrandpa <- makeFounder("grandpa_da")
source("http://jonsmitchell.com/code/simFxn04.R")
pdf(file="003_relatePlot.pdf", height = 4, width = 4)#
plot(density(ManySiblings), main="", xlab="proportion shared genes")#
sum(ToMomMom, ToMomDad)#
dev.off()
5#
A <- 5#
A * 2 #
B <- c(A, 5, 5)#
B#
B * 2#
B <- c(A, 5, 5)#
B * 2#
C <- c(B, 6, 10)#
C * 6#
D <- c(1, 5, 10, 15, 20)#
sum(D)#
mean(D)#
min(D)#
E <- c(6, 7, 8, 9, 10)#
which (E == 8)#
which (E > 8)#
E[which (E > 8)]#
#
trueMean1 <- 5#
trueSD1 <- 5#
population1 <- rnorm(1e6 , trueMean1 , trueSD1)#
#
trueMean2 <- 4#
trueSD2 <- 5 #
population2 <- rnorm(1e6, trueMean2 , trueSD2)#
#
Size <- 50 #
Sample1 <- sample(population1, Size)#
Sample2 <- sample(population2, Size)#
boxplot(Sample1, Sample2)#
individual1 <- c("B","A")#
individual2 <- c("A","A")#
Gam1 <- sample(individual1 , 1)#
Gam2 <- sample(individual2, 1)#
newBaby <- c(Gam1, Gam2)#
isHet <- c()#
#
for (i in 1:100) {#
		Gam1 <- sample(individual1, 1)#
		Gam2 <- sample(individual2, 1)#
		newBaby <- c(Gam1, Gam2)#
		isHet[i] <- Gam1 == Gam2#
}#
sum(isHet) / length(isHet)#
source("http://jonsmitchell.com/code/simFxn04.R")#
MatGrandma <- makeFounder("grandma_mom")#
MatGrandpa <- makeFounder("grandpa_mom")#
PatGrandma <- makeFounder("grandma_da")#
PatGrandpa <- makeFounder("grandpa_da")#
Alan <- makeBaby(PatGrandma, PatGrandpa)#
Brenda <- makeBaby(PatGrandma, PatGrandpa)#
Focus <- makeBaby(Brenda, Alan)#
ToMom <-length( grep("mom", Focus))/length(Focus)#
ToMomMom <- length( grep("grandma_mom", Focus))/length(Focus)#
ToMomDad <- length( grep("grandpa_mom", Focus))/length(Focus)#
Sibling_01 <- makeBaby(Brenda, Alan)#
ToSib <-length(intersect(Focus, Sibling_01))/length(Focus)#
ManySiblings <- replicate( 1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))/length(Focus))#
quantile(ManySiblings)#
mean(ManySiblings)#
#
pdf(file="003_relatePlot.pdf", height = 4, width = 4)#
plot(density(ManySiblings), main="", xlab="proportion shared genes")#
sum(ToMomMom, ToMomDad)#
dev.off()
source("https//jonsmitchell.com/code/fxn05.R")
source("https://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize=50, nGeneration=100, initial_p=0.5, h=#
	1, s = 0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq." , lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col = c("black","red"), lwd=#
	2, bty="n")
plotFit(nruns=10, n=50, ngens= 100, init_p=0.5, h=1, s=0)
Expectation <- c(10, 10, 10)
Expectation <- c(10, 10, 10, 10)
Observed <-c(15, 15, 5, 5)
Chisq <- sum (((Expectation-Observed)^ 2 ) / Expectation)
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2 ~#
	"=" ~.(Chisq )), legend.text=c("expected", "observed"))
Pop1 <- simPop(Popsize=50, nGeneration=100, initial_p=0.5, h=#
	1, s = 0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq." , lwd=2)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = '1', xlab="generation#
	", ylab="allele freq." , lwd=2)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)
plot(1 :nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation", ylab="allele freq.", lwd=2)
plot(1 :nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)
Pop1 <- simPop(Popsize=50, nGeneration=100, initial_p=0.5, h=#
	1, s = 0)#
plot(1 :nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)
Pop1 <- simPop(Popsize=50, nGeneration=100, initial_p=0.5, h=#
	1, s = 0)#
plot(1 :nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col = c("black","red"), lwd=#
	2, bty="n")
Pop1 <- simPop(Popsize=50, nGeneration=100, initial_p=0.5, h=1, s = 0)#
plot(1 :nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)
plot(1 :nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)
plot(1 :nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)
plot(1 :nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = '1', xlab='generation#
	', ylab='allele freq.', lwd=2)
plot(1 :nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = 1, xlab='generation#
	', ylab='allele freq.', lwd=2)
plot(1 :nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col = c("black","red"), lwd=#
	2, bty="n")
plot( 1 :nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col = c("black","red"), lwd=#
	2, bty="n")
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col = c("black","red"), lwd=#
	2, bty="n")
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col = c("black","red"), lwd=#
	2, bty="n")
Pop1 <- simPop(Popsize=50, nGeneration=100, initial_p=0.5, h=1, s = 0)#
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col = c("black","red"), lwd=#
	2, bty="n")
Pop1 <- simPop(Popsize=50, nGeneration=100, initial_p=0.5, h=1, s=0)#
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)
Pop1 <- simPop(Popsize=50, nGeneration=100, initial_p=0.5, h=1, s=0)#
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col = c("black","red"), lwd=#
	2, bty="n")
Pop1 <- simPop(Popsize=50, nGeneration=100, initial_p=0.5, h=1, s=0)#
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col = c("black","red"), lwd=#
	2, bty="n")
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = '1', xlab='generation#
	', ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col = c("black","red"), lwd=#
	2, bty="n")
source("https://jonsmitchell.com/code/fxn05.R")#
Pop1 <- simPop(Popsize=50, nGeneration=100, initial_p=0.5, h=1, s=0)#
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)
source("https://jonsmitchell.com/code/fxn05.R")#
Pop1 <- simPop(Popsize=50, nGeneration=100, initial_p=0.5, h=1, s=0)#
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation#
	", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col = c("black","red"), lwd=#
	2, bty="n")#
plotFit(nruns=10, n=50, ngens= 100, init_p=0.5, h=1, s=0)#
Expectation <- c(10, 10, 10, 10)#
Observed <-c(15, 15, 5, 5)#
Chisq <- sum (((Expectation-Observed)^ 2 ) / Expectation)#
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2 ~#
	"=" ~.(Chisq )), legend.text=c("expected", "observed"))
Observed <- c(5, 0, 0, 35)
Chisq <- sum (((Expectation-Observed)^ 2 ) / Expectation)#
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2 ~#
	"=" ~.(Chisq )), legend.text=c("expected", "observed"))
Observed <- c(2, 3, 10, 30)
Chisq <- sum (((Expectation-Observed)^ 2 ) / Expectation)#
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2 ~#
	"=" ~.(Chisq )), legend.text=c("expected", "observed"))
